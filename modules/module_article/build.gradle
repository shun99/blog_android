if (isLibrary.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            if (isLibrary.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation project(':frameworks:kit_base')
    implementation project(':frameworks:kit_http')
    implementation project(':frameworks:kit_util')
    implementation project(':frameworks:kit_widget')
    implementation project(':frameworks:kit_recycleview')

    implementation project(':frameworks:app_common')
    implementation project(':frameworks:app_res')
    implementation project(':frameworks:app_theme')

    implementation project(':frameworks:wrap_multistate')

    implementation project(":modules:mediator_article")

    annotationProcessor rootProject.ext.deps.butterknife_compiler
    annotationProcessor rootProject.ext.deps.arouter_compiler
}
